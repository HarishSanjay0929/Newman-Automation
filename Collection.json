{
	"info": {
		"_postman_id": "a01f2093-8fa4-4b15-be4c-099447705715",
		"name": "Newman Business create",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43003067"
	},
	"item": [
		{
			"name": "JWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"]=responseCode.code===200;\r",
							"var responseJSON;\r",
							"responseJSON=JSON.parse(responseBody);\r",
							"pm.environment.set(\"accesstoken\", responseJSON[\"AccessToken\"]);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Base64 URL encoding\r",
							"function base64url(source) {\r",
							"  // Encode in classical base64\r",
							"  encodedSource = CryptoJS.enc.Base64.stringify(source);\r",
							"\r",
							"  // Remove padding equal characters\r",
							"  encodedSource = encodedSource.replace(/=+$/, '');\r",
							"\r",
							"  // Replace characters according to base64url specifications\r",
							"  encodedSource = encodedSource.replace(/\\+/g, '-');\r",
							"  encodedSource = encodedSource.replace(/\\//g, '_');\r",
							"\r",
							"  return encodedSource;\r",
							"};\r",
							"\r",
							"//To generate Header and Payload\r",
							"\r",
							"var header = {\r",
							"  \"alg\": \"HS256\",\r",
							"  \"typ\": \"JWT\"\r",
							"};\r",
							"\r",
							"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));\r",
							"var encodedHeader = base64url(stringifiedHeader);\r",
							"\r",
							"//Unix epoch time formula\r",
							"var time = Math.floor(new Date().getTime()/1000.0); \r",
							"\r",
							"var payloaddata = {\r",
							"  \"iss\": pm.environment.get('clientid'),\r",
							"  \"sub\": pm.environment.get('clientid'),\r",
							"  \"aud\": pm.environment.get('usertoken'),\r",
							"  \"iat\": time-14\r",
							"};\r",
							"console.log(time);\r",
							"\r",
							"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(payloaddata));\r",
							"var encodedPayloadData = base64url(stringifiedData);\r",
							"\r",
							"var headerPayload = encodedHeader + \".\" + encodedPayloadData;\r",
							"\r",
							"//Client secret ID - To generate JWS\r",
							"\r",
							"var secretID = pm.environment.get('secret');\r",
							"\r",
							"var signature = CryptoJS.HmacSHA256(headerPayload, secretID);\r",
							"signature = base64url(signature);\r",
							"\r",
							"var jws = headerPayload + \".\" + signature;\r",
							"\r",
							"console.log(jws);\r",
							"\r",
							"pm.environment.set(\"auth\", jws);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authentication",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://testoauth.expressauth.net/v2/tbsauth",
					"protocol": "http",
					"host": [
						"testoauth",
						"expressauth",
						"net"
					],
					"path": [
						"v2",
						"tbsauth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// List of common valid EIN prefixes\r",
							"const einPrefixes = [10,12,13,14,16,20,21,22,23,25,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99];\r",
							"\r",
							"// Randomly select prefix\r",
							"let prefix = einPrefixes[Math.floor(Math.random() * einPrefixes.length)];\r",
							"// Pad prefix if needed\r",
							"prefix = prefix.toString().padStart(2, '0');\r",
							"\r",
							"// Generate random 7 digits\r",
							"let body = '';\r",
							"for (let i = 0; i < 7; i++) {\r",
							"    body += Math.floor(Math.random() * 10);\r",
							"}\r",
							"\r",
							"// Combine for EIN\r",
							"let ein = prefix + body;\r",
							"\r",
							"// Save as environment variable\r",
							"pm.environment.set(\"randomEIN\", ein);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{accesstoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"BusinessNm\": \"{{$randomCompanyName}}\",\r\n    \"FirstNm\": null,\r\n    \"MiddleNm\": null,\r\n    \"LastNm\": null,\r\n    \"Suffix\": null,\r\n    \"PayerRef\": \"Union{{$randomInt}}\",\r\n    \"TradeNm\": \"Union Trades\",\r\n    \"IsDefaultBusiness\": true,\r\n    \"IsEIN\": false,   \r\n    \"EINorSSN\": \"{{randomEIN}}\",\r\n    \"Email\": \"james@sample.com\",\r\n    \"ContactNm\": \"James Smith\",\r\n    \"Phone\": \"6534567890\",\r\n    \"PhoneExtn\": \"123\",\r\n    \"Fax\": \"9834567890\",\r\n    \"BusinessType\": \"ESTE\",\r\n    \"SigningAuthority\": {\r\n        \"Name\": \"James Smith\",\r\n        \"Phone\": \"9934567890\",\r\n        \"BusinessMemberType\": \"ADMINISTRATOR\"\r\n    },\r\n    \"KindOfEmployer\": \"FEDERALGOVT\",\r\n    \"KindOfPayer\": \"REGULAR941\",\r\n    \"IsBusinessTerminated\": false,\r\n    \"Form1042SDetails\": {\r\n      \"WHAgtCh3Cd\": \"11\",\r\n      \"WHAgtCh4Cd\": \"16\",\r\n      \"WHAgtGIIN\": null,\r\n      \"FTIN\": \"12345\",\r\n      \"Country\": \"AL\"\r\n    },\r\n    \"IsForeign\": false,\r\n    \"USAddress\": {\r\n        \"Address1\": \"3576 AIRPORT WAY\",\r\n        \"Address2\": \"UNIT 9\",\r\n        \"City\": \"FAIRBANKS\",\r\n        \"State\": \"AK\",\r\n        \"ZipCd\": \"99709\"\r\n    },\r\n    \"ForeignAddress\": null,\r\n    \"ACADetails\": {\r\n      \"FirstName\": \"Kingston\",\r\n      \"MiddleName\": \"Walman\",\r\n      \"LastName\": \"ADMINRATOR\",\r\n      \"Suffix\": \"Jr\",\r\n      \"Phone\": \"8834578906\",\r\n      \"IsGovernmentalUnit\": true\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://testapi.taxbandits.com/v1.7.3/Business/Create",
					"protocol": "https",
					"host": [
						"testapi",
						"taxbandits",
						"com"
					],
					"path": [
						"v1.7.3",
						"Business",
						"Create"
					]
				}
			},
			"response": []
		}
	]
}